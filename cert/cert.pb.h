/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.3 */

#ifndef PB_CERT_CERT_PB_H_INCLUDED
#define PB_CERT_CERT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _cert_RawNebulaCertificateDetails {
    pb_callback_t Name;
    pb_callback_t Ips;
    pb_callback_t Subnets;
    pb_callback_t Groups;
    int64_t NotBefore;
    int64_t NotAfter;
    pb_callback_t PublicKey;
    bool IsCA;
    pb_callback_t Issuer;
} cert_RawNebulaCertificateDetails;

typedef struct _cert_RawNebulaCertificate {
    bool has_Details;
    cert_RawNebulaCertificateDetails Details;
    pb_callback_t Signature;
} cert_RawNebulaCertificate;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cert_RawNebulaCertificate_init_default   {false, cert_RawNebulaCertificateDetails_init_default, {{NULL}, NULL}}
#define cert_RawNebulaCertificateDetails_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define cert_RawNebulaCertificate_init_zero      {false, cert_RawNebulaCertificateDetails_init_zero, {{NULL}, NULL}}
#define cert_RawNebulaCertificateDetails_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define cert_RawNebulaCertificateDetails_Name_tag 1
#define cert_RawNebulaCertificateDetails_Ips_tag 2
#define cert_RawNebulaCertificateDetails_Subnets_tag 3
#define cert_RawNebulaCertificateDetails_Groups_tag 4
#define cert_RawNebulaCertificateDetails_NotBefore_tag 5
#define cert_RawNebulaCertificateDetails_NotAfter_tag 6
#define cert_RawNebulaCertificateDetails_PublicKey_tag 7
#define cert_RawNebulaCertificateDetails_IsCA_tag 8
#define cert_RawNebulaCertificateDetails_Issuer_tag 9
#define cert_RawNebulaCertificate_Details_tag    1
#define cert_RawNebulaCertificate_Signature_tag  2

/* Struct field encoding specification for nanopb */
#define cert_RawNebulaCertificate_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Details,           1) \
X(a, CALLBACK, SINGULAR, BYTES,    Signature,         2)
#define cert_RawNebulaCertificate_CALLBACK pb_default_field_callback
#define cert_RawNebulaCertificate_DEFAULT NULL
#define cert_RawNebulaCertificate_Details_MSGTYPE cert_RawNebulaCertificateDetails

#define cert_RawNebulaCertificateDetails_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   Name,              1) \
X(a, CALLBACK, REPEATED, UINT32,   Ips,               2) \
X(a, CALLBACK, REPEATED, UINT32,   Subnets,           3) \
X(a, CALLBACK, REPEATED, STRING,   Groups,            4) \
X(a, STATIC,   SINGULAR, INT64,    NotBefore,         5) \
X(a, STATIC,   SINGULAR, INT64,    NotAfter,          6) \
X(a, CALLBACK, SINGULAR, BYTES,    PublicKey,         7) \
X(a, STATIC,   SINGULAR, BOOL,     IsCA,              8) \
X(a, CALLBACK, SINGULAR, BYTES,    Issuer,            9)
#define cert_RawNebulaCertificateDetails_CALLBACK pb_default_field_callback
#define cert_RawNebulaCertificateDetails_DEFAULT NULL

extern const pb_msgdesc_t cert_RawNebulaCertificate_msg;
extern const pb_msgdesc_t cert_RawNebulaCertificateDetails_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cert_RawNebulaCertificate_fields &cert_RawNebulaCertificate_msg
#define cert_RawNebulaCertificateDetails_fields &cert_RawNebulaCertificateDetails_msg

/* Maximum encoded size of messages (where known) */
/* cert_RawNebulaCertificate_size depends on runtime parameters */
/* cert_RawNebulaCertificateDetails_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
